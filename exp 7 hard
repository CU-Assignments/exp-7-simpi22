import java.sql.*;
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;

class Student {
    private int studentID;
    private String name;
    private String department;
    private int marks;

    public Student(int studentID, String name, String department, int marks) {
        this.studentID = studentID;
        this.name = name;
        this.department = department;
        this.marks = marks;
    }

    public int getStudentID() { return studentID; }
    public String getName() { return name; }
    public String getDepartment() { return department; }
    public int getMarks() { return marks; }

    @Override
    public String toString() {
        return "StudentID: " + studentID + ", Name: " + name + ", Department: " + department + ", Marks: " + marks;
    }
}

public class StudentManagement {
    private static final String URL = "jdbc:mysql://localhost:3306/StudentDB";
    private static final String USER = "your_username";
    private static final String PASSWORD = "your_password";
    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        while (true) {
            System.out.println("\nStudent Management System:");
            System.out.println("1. Add Student");
            System.out.println("2. View Students");
            System.out.println("3. Update Student");
            System.out.println("4. Delete Student");
            System.out.println("5. Exit");
            System.out.print("Enter your choice: ");

            int choice = scanner.nextInt();
            scanner.nextLine();

            switch (choice) {
                case 1: addStudent(); break;
                case 2: viewStudents(); break;
                case 3: updateStudent(); break;
                case 4: deleteStudent(); break;
                case 5: System.out.println("Exiting..."); return;
                default: System.out.println("Invalid choice, try again.");
            }
        }
    }

    private static void addStudent() {
        System.out.print("Enter Name: ");
        String name = scanner.nextLine();
        System.out.print("Enter Department: ");
        String department = scanner.nextLine();
        System.out.print("Enter Marks: ");
        int marks = scanner.nextInt();
        scanner.nextLine();

        String query = "INSERT INTO Student (Name, Department, Marks) VALUES (?, ?, ?)";
        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
             PreparedStatement pstmt = conn.prepareStatement(query)) {

            pstmt.setString(1, name);
            pstmt.setString(2, department);
            pstmt.setInt(3, marks);
            pstmt.executeUpdate();
            System.out.println("Student added successfully.");

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private static void viewStudents() {
        String query = "SELECT * FROM Student";
        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(query)) {

            if (!rs.isBeforeFirst()) {
                System.out.println("No students found.");
                return;
            }

            while (rs.next()) {
                System.out.println(new Student(
                    rs.getInt("StudentID"),
                    rs.getString("Name"),
                    rs.getString("Department"),
                    rs.getInt("Marks")
                ));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private static void updateStudent() {
        System.out.print("Enter Student ID to update: ");
        int studentID = scanner.nextInt();
        scanner.nextLine();
        System.out.print("Enter new Name: ");
        String name = scanner.nextLine();
        System.out.print("Enter new Department: ");
        String department = scanner.nextLine();
        System.out.print("Enter new Marks: ");
        int marks = scanner.nextInt();
        scanner.nextLine();

        String query = "UPDATE Student SET Name = ?, Department = ?, Marks = ? WHERE StudentID = ?";
        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
             PreparedStatement pstmt = conn.prepareStatement(query)) {

            pstmt.setString(1, name);
            pstmt.setString(2, department);
            pstmt.setInt(3, marks);
            pstmt.setInt(4, studentID);

            int rows = pstmt.executeUpdate();
            if (rows > 0) System.out.println("Student updated successfully.");
            else System.out.println("Student not found.");

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private static void deleteStudent() {
        System.out.print("Enter Student ID to delete: ");
        int studentID = scanner.nextInt();
        scanner.nextLine();

        String query = "DELETE FROM Student WHERE StudentID = ?";
        try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
             PreparedStatement pstmt = conn.prepareStatement(query)) {

            pstmt.setInt(1, studentID);
            int rows = pstmt.executeUpdate();
            if (rows > 0) System.out.println("Student deleted successfully.");
            else System.out.println("Student not found.");

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
